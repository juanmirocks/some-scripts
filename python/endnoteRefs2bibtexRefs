#!/usr/bin/env python3
import sys
import re
import argparse

assert sys.version_info.major == 3, "the script requires Python 3"


__author__ = "Juan Miguel Cejuela (@juanmirocks)"


__help__ = """
            Transform inline a text file, converting unformatted endnote references/citations to bibtex-latex citations,
            as in:

            Input:
            blah blah... {Van Auken, 2012 #1;Gramates 2017 #82;Cejuela, 2017 #277} blah blah {Vaynerchuk 2016; #4}

            Output:
            blah blah... \cite{RN1,RN82,RN277} blah blah


            Notes:

            * The script also works if the input contains squarly brackets ({, }) and the # symbol (#) is escaped, e.g.
            \{Pio 2045 \#0\}.

            * WARNING (KNOWN LIMITATION): you should previously merge the relevant lines, as multiline citations are
            * currently not detected, e.g.:
                blah blah \{Cejuela, 2017
                \#277\}.

            * Tip: to convert a work-in-progress word document to latex, you can combine pandoc (or similar utility) and
              this script like:

              1. Backup your word file, and in the new file, do: EndNote --> Tools --> Convert to Unformatted Citations
              2. pandoc -t latex -s --wrap=none yourWordDocument.docx > temp1.tex
              3. endnoteRefs2bibtexRefs temp1.tex > temp2.tex

            * For more info, run the script with the `--help` argument.


            Go ahead, you can run the script on this script :-)
           """


REGEX_OUTER = re.compile("(.*?)(\\\?{[^{}]*?#[^{}]*}\\\?)(.*)", re.DOTALL)
REGEX_INNER = re.compile("#([0-9]+)")

# ----------------------------------------------------------------------------

if __name__ == "__main__":
    try:
        parser = argparse.ArgumentParser(description=__help__)

        parser.add_argument("input_file", help="File to be converted")
        parser.add_argument("--start_at_line", type=int, required=False, default=1,
                            help="Start processing after the given line only")
        parser.add_argument("--cite_command", required=False, default="cite",
                            help="Latex command for citing, e.g. cite or paracite")
        parser.add_argument("--ref_prefix", required=False, default="RN",
                            help="Prefix to use in the latex-labeled citations. \
                            For context, 'RN' is the the typical prefix generated by EndNote when exporting citations to BibTex.")

        args = parser.parse_args()

        #

        with open(args.input_file) as f:
            for line_num, line in enumerate(f, 1):
                if line_num < args.start_at_line:
                    sys.stdout.write(line)

                else:
                    rest_of_line = line
                    while len(rest_of_line) > 0:
                        match = re.search(REGEX_OUTER, rest_of_line)
                        if match:
                            sys.stdout.write(match.group(1))
                            citation_labels = [args.ref_prefix + num for num in re.findall(REGEX_INNER, match.group(2))]
                            sys.stdout.write("\\" + args.cite_command + "{" + ",".join(citation_labels) + "}")
                            rest_of_line = match.group(3)
                        else:
                            sys.stdout.write(rest_of_line)
                            rest_of_line = ""

        sys.stdout.flush()

    except Exception:
        print(__help__)
        print()
        raise
